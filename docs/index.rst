Documentation for thompsons_v
=============================

`Nathan Barker <https://www.dpmms.cam.ac.uk/~nb443/research.html>`_ and `Andrew Duncan <http://www.mas.ncl.ac.uk/~najd2/>`_ are currently preparing a paper entitled *The power conjugacy problem in Higman-Thompson groups* which addresses the following problem in the groups named :math:`G_{n,r}`.

.. epigraph::
	
	[AS]_ Given two elements :math:`x` and :math:`y` of a group, are there integers :math:`a` and :math:`b` and a third element :math:`z` for which :math:`x^a = zy^bz^{-1} \neq 1`? If so, provide them.

This package aims to implement the algorithm described in the paper. To do so it provides tools for with the algebra :math:`V_{n,r}`, a certain set of :mod:`words <thompson.word>`.

.. warning::
	
	For the most part, this documentation is automatically generated by `Sphinx <http://sphinx-doc.org/>`_ , so it's not the prettiest thing that's ever been written.

Purpose of this package
-----------------------

This all began as a series of tools to represent tree pair diagrams in `Thompson's group <http://en.wikipedia.org/wiki/Thompson_groups>`_ :math:`V = G_{2,1}`, hence the name ``thompsons_v``. The focus has moved away from trees and dyadic partitions, and more towards bijections between bases of words.

The main algorithms from the paper are:

- Determining the :meth:`orbit type of an element <thompson.automorphism.Automorphism.orbit_type>` [Thm. 4.24.1]
- Generating a :meth:`quasi-normal basis <thompson.automorphism.Automorphism.compute_quasinormal_basis>` [Thm. 4.24.1]
- The :meth:`orbit-sharing test <thompson.automorphism.Automorphism.share_orbit>`, [Thm. 4.24.2]
- The :meth:`conjugacy test <thompson.mixed.MixedAut.test_conjugate_to>`, [Alg. 5.6]

I'm currently working on the power-conjugacy test.

Contents
--------

.. toctree::
   :maxdepth: 1
   
   Number Theory <thompson.number_theory>
   Words and standard forms <thompson.word>
   Generating sets and bases <thompson.generators>
   Homomorphisms <thompson.homomorphism>
   Orbits <thompson.orbits>
   Automorphism <thompson.automorphism>
   MixedAuts <thompson.mixed>
   Free factors <thompson.factors>
   Examples <thompson.examples>
   References <references>

Indices
-------

* :ref:`genindex`

