def generate_tikz_code(aut, filename, domain=None, name='', self_contained=False):
	r""".. caution:: This is an experimental feature based partially on [SD10]_.
	
	Saves instructions in the given *filename* for TikZ to draw the given automorphism. The leaves of the domain tree are the elements of *domain*. The arrow is labelled with the contents of *name*; this can include TeX mathematics syntax, e.g. ``name=r'$\alpha$'``.
	
	The difference forests domain - range and range - domain are drawn with dashed lines. Attractors and repellers are drawn in red.
	"""
	#1. Compute X = L(domain \intersect range)
	domain = handle_domain(domain, aut)
	range, X = intersection_from_domain(domain, aut)
	range = aut.image_of_set(domain)
	
	#2. Generate the tikz code
	with open(filename, 'wt') as f:
		if self_contained:
			f.write(head_sc)
		f.write(head)
		basis_to_tree(aut, domain, range, X, f, name='domain')
		
		y = max(len(w) for w in domain) - 1
		z = max(len(w) for w in domain) - 1
		depth = -min(y, z)/5
		coordend = r'\textwidth, ' + str(depth*8) + 'mm)'
		print(r'\draw[->] (0.25' + coordend, '-- node[auto]{', name, '} (0.35' + coordend, ';\n', file=f)
		
		basis_to_tree(aut, range, domain, X, f, name='range', extra=r'xshift=0.6\textwidth')
		f.write(tail)
		if self_contained:
			f.write(tail_sc)

